#!/bin/bash

# Create enhanced stats.html with GPS map integration
cd "$(dirname "${BASH_SOURCE[0]}")"

echo "Creating enhanced stats.html with GPS map..."

# Create the basic HTML structure
cat > stats.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Meshtastic Telemetry Stats</title>
    <!-- Leaflet CSS for GPS Maps -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" 
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <!-- Leaflet JavaScript -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        h1 { color: #333; }
        h2 { color: #666; margin-top: 30px; }
        h3 { color: #888; margin-top: 20px; }
        table { border-collapse: collapse; width: 100%; margin: 10px 0; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; font-weight: bold; }
        tr:nth-child(even) { background-color: #f9f9f9; }
        .timestamp { font-family: monospace; }
        .number { text-align: right; }
        .gps-section { 
            background: #f8f9fa; 
            padding: 20px; 
            border-radius: 5px; 
            margin: 20px 0; 
            border-left: 4px solid #28a745; 
        }
        .nav-section {
            background: #f8f9fa; 
            padding: 15px; 
            border-radius: 5px; 
            margin: 20px 0; 
            border-left: 4px solid #007bff;
        }
        .nav-link {
            text-decoration: none; 
            padding: 8px 12px; 
            margin: 5px; 
            background: #e3f2fd; 
            border-radius: 4px; 
            color: #1976d2;
            display: inline-block;
        }
        .nav-link:hover {
            background: #bbdefb;
            text-decoration: none;
        }
        .card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
            margin: 20px 0;
            border: 1px solid #e0e0e0;
        }
        .card h3 {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px 20px;
            margin: 0;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .card-content {
            padding: 20px;
        }
    </style>
</head>
<body>
EOF

# Add the header
cat >> stats.html << EOF
<h1>Meshtastic Telemetry Statistics</h1>
<p><em>Last updated: $(date)</em></p>

<!-- Navigation Index -->
<div class="nav-section">
    <h3 style="margin-top: 0; color: #007bff;">üìç Quick Navigation</h3>
    <div>
    <a href="#gps-map-header" class="nav-link">üó∫Ô∏è GPS Map</a>
        <a href="#ml-status" class="nav-link">ü§ñ ML Status</a>
        <a href="#telemetry-summary" class="nav-link">üìä Telemetry Summary</a>
        <a href="#nodes-summary" class="nav-link">üåê Nodes Summary</a>
    </div>
</div>

<!-- GPS Map Section -->
<h2 id="gps-map-header">üó∫Ô∏è Network GPS Map</h2>
<div class="gps-section">
EOF

# Add the GPS map content generated by our Python script
python3 -c "from gps_map_generator import generate_gps_map_section; print(generate_gps_map_section())" >> stats.html

# Add telemetry summary section
cat >> stats.html << 'EOF'
</div>

<!-- Telemetry Summary Section -->
<h2 id="telemetry-summary">üìä Telemetry Summary</h2>
<div style="background: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0; border-left: 4px solid #ffc107;">
    <h3 style="margin-top: 0; color: #ffc107;">Recent Activity</h3>
EOF

# Add telemetry data if available
if [ -f "telemetry_log.csv" ]; then
    total_records=$(tail -n +2 "telemetry_log.csv" | wc -l)
    recent_records=$(tail -20 "telemetry_log.csv" | wc -l)
    
    cat >> stats.html << EOF
    <p><strong>Total telemetry records:</strong> $total_records</p>
    <p><strong>Recent activity:</strong> $recent_records records in latest collection</p>
    
    <h4>Latest Telemetry (Last 10 Records)</h4>
    <table>
        <thead>
            <tr>
                <th>Timestamp</th>
                <th>Node ID</th>
                <th>Status</th>
                <th>Battery</th>
                <th>Voltage</th>
                <th>Channel Util</th>
                <th>TX Util</th>
                <th>Uptime</th>
            </tr>
        </thead>
        <tbody>
EOF

    # Add last 10 telemetry records
    tail -10 "telemetry_log.csv" | while IFS=',' read -r timestamp address status battery voltage channel_util tx_util uptime; do
        cat >> stats.html << EOF
            <tr>
                <td class="timestamp">$timestamp</td>
                <td><strong>$address</strong></td>
                <td>$status</td>
                <td>$battery</td>
                <td>$voltage</td>
                <td>$channel_util</td>
                <td>$tx_util</td>
                <td>$uptime</td>
            </tr>
EOF
    done
    
    echo "        </tbody>" >> stats.html
    echo "    </table>" >> stats.html
else
    echo "    <p><em>No telemetry data available</em></p>" >> stats.html
fi

# Add nodes summary section
cat >> stats.html << 'EOF'
</div>

<!-- Nodes Summary Section -->
<h2 id="nodes-summary">üåê Network Nodes Summary</h2>
<div style="background: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0; border-left: 4px solid #17a2b8;">
    <h3 style="margin-top: 0; color: #17a2b8;">Node Overview</h3>
EOF

# Add nodes data if available
if [ -f "nodes_log.csv" ]; then
    total_nodes=$(tail -n +2 "nodes_log.csv" | wc -l)
    gps_nodes=$(grep -E '[0-9]+\.[0-9]+¬∞,[0-9]+\.[0-9]+¬∞' "nodes_log.csv" | wc -l)
    
    cat >> stats.html << EOF
    <p><strong>Total nodes discovered:</strong> $total_nodes</p>
    <p><strong>Nodes with GPS coordinates:</strong> $gps_nodes</p>
    
    <h4>Recent Nodes (Last 10)</h4>
    <table>
        <thead>
            <tr>
                <th>User</th>
                <th>ID</th>
                <th>AKA</th>
                <th>Hardware</th>
                <th>Role</th>
                <th>Location</th>
                <th>Battery</th>
                <th>Last Heard</th>
            </tr>
        </thead>
        <tbody>
EOF

    # Add last 10 node records
    tail -10 "nodes_log.csv" | while IFS=',' read -r user id aka hardware pubkey role lat lon alt battery channel tx snr hops ch lastheard since; do
        location="N/A"
        if [[ "$lat" =~ ^[0-9]+\.[0-9]+¬∞$ && "$lon" =~ ^[0-9]+\.[0-9]+¬∞$ ]]; then
            location="$lat, $lon"
        fi
        
        cat >> stats.html << EOF
            <tr>
                <td>$user</td>
                <td><strong>$id</strong></td>
                <td>$aka</td>
                <td>$hardware</td>
                <td>$role</td>
                <td>$location</td>
                <td>$battery</td>
                <td>$lastheard</td>
            </tr>
EOF
    done
    
    echo "        </tbody>" >> stats.html
    echo "    </table>" >> stats.html
else
    echo "    <p><em>No node data available</em></p>" >> stats.html
fi

# Close the HTML
cat >> stats.html << 'EOF'
</div>

<script>
function toggleSection(id) {
    const content = document.getElementById(id);
    if (content) {
        const isVisible = content.style.display !== 'none';
        content.style.display = isVisible ? 'none' : 'block';
    }
}

// Smooth scrolling for navigation links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        document.querySelector(this.getAttribute('href')).scrollIntoView({
            behavior: 'smooth'
        });
    });
});
</script>

</body>
</html>
EOF

echo "‚úÖ Enhanced stats.html created successfully!"
echo ""
echo "üìä Features included:"
echo "  ‚Ä¢ Interactive GPS map with $(python3 -c "from gps_map_generator import extract_gps_nodes; print(len(extract_gps_nodes()))" 2>/dev/null || echo "?") nodes"
echo "  ‚Ä¢ Telemetry summary with recent records"
echo "  ‚Ä¢ Nodes overview with GPS status"
echo "  ‚Ä¢ Smooth navigation between sections"
echo "  ‚Ä¢ Classic table-based layout"
echo ""
echo "üåê Open stats.html in a web browser to view!"